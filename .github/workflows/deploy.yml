name: Deploy

on:
  workflow_dispatch:

jobs:
  deploy:
    env:
      NODE_ENV: development
      NODE_HOSTNAME: hardenweb.southeastasia.azurecontainer.io
      PORT: 80
      DB_HOST: harden-db.postgres.database.azure.com
      DB_PORT: 5432
      DB_USER: postgres@harden-db
      DB_DATABASE: postgres
      IMAGE_NAME: harden
      IMAGE_TAG: latest
      REGISTRY_NAME: hardencontainerregistry
      STORAGE_ACCOUNT_SHARE_NAME: storageaccountshare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Creare azure container registry'
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az acr create --resource-group ${{ secrets.RESOURCE_GROUP }} --name ${{ env.REGISTRY_NAME }} --sku Basic
            registryId=$(az acr show \
              --name ${{ env.REGISTRY_NAME }} \
              --query id --output tsv)
            az role assignment create \
              --assignee ${{ secrets.REGISTRY_USERNAME }} \
              --scope $registryId \
              --role AcrPush

      - name: 'Build and push image'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |
          docker build . -t ${{ env.REGISTRY_NAME }}.azurecr.io/$IMAGE_NAME:$IMAGE_TAG
          docker push ${{ env.REGISTRY_NAME }}.azurecr.io/$IMAGE_NAME:$IMAGE_TAG

      - name: 'Deploy project'
        uses: azure/CLI@v1
        with:
          inlineScript: |
            sed -i "s/{{ NODE_ENV }}/$NODE_ENV/; \
                    s/{{ NODE_HOSTNAME }}/$NODE_HOSTNAME/; \
                    s/{{ PORT }}/$PORT/; \
                    s/{{ DB_HOST }}/$DB_HOST/; \
                    s/{{ DB_PORT }}/$DB_PORT/; \
                    s/{{ DB_USER }}/$DB_USER/; \
                    s/{{ DB_PASSWORD }}/XzBjPw6S8VaDCBX/; \
                    s/{{ DB_DATABASE }}/$DB_DATABASE/; \
                    s/{{ DNS_NAME_LABEL }}/${{ secrets.RESOURCE_GROUP }}/; \
                    s/{{ IMAGE_NAME }}/$IMAGE_NAME/; \
                    s/{{ IMAGE_TAG }}/$IMAGE_TAG/; \
                    s/{{ REGISTRY_LOGIN_SERVER }}/${{ env.REGISTRY_NAME }}.azurecr.io/; \
                    s/{{ REGISTRY_USERNAME }}/${{ secrets.REGISTRY_USERNAME }}/; \
                    s/{{ REGISTRY_PASSWORD }}/${{ secrets.REGISTRY_PASSWORD }}/; \
                    s/{{ STORAGE_ACCOUNT_NAME }}/hardenstorageaccount/; \
                    s/{{ STORAGE_ACCOUNT_KEY }}/9nWzjVf6WmYk9zlc6wL+VrVHcmaImq\/GEcX\/LhZgXDdciB7INq7jB7TcdpoRoVsF\/bSWwSdDCd4BC4wxx4SeGA==/; \
                    s/{{ STORAGE_ACCOUNT_SHARE_NAME }}/$STORAGE_ACCOUNT_SHARE_NAME/;" aci.yaml
            az container create --resource-group ${{ secrets.RESOURCE_GROUP }} --file aci.yaml
